#!/usr/bin/python3

import sys
import json
import os
import argparse

def tracejsonfile(fname, pbs=False, method='rivulet2'):
    with open(fname) as f:
        dataidx = json.load(f)

    root = dataidx['rootpath']

    for datasetname, dataset in dataidx['data'].items():
        print('-- Working on dataset', datasetname)
        for imgid, img in dataset.items():
            print('---- Working on image', imgid)
            outpath = img['outpath'] if 'outpath' in img else img['imagepath'] + '.r2.swc'
            if method is 'rivulet2':
                cmd = 'python3 rivulet2 --file %s --outfile %s --speed dt' % (os.path.join(root, img['imagepath']), os.path.join(root, outpath))
                if 'groundtruth' in img: 
                    cmd += ' --groundtruth ' + os.path.join(root, img['groundtruth'])
            else:
                raise Exception('Method %s not implemented yet' % method)

            for name, value in img['misc'].items():
                cmd += ' --' + name + ' ' + str(value)

            if pbs: # Add the options for pbs 
                pbscmd = "qsub " + " -N " + str(imgid)
                cmd = pbscmd + ' -v rivuletcmd=\"' + cmd + '\" ' + dataidx['pbsfile']
            print(cmd)
            os.system(cmd)

parser = argparse.ArgumentParser(description='Arguments for tracing files index with a .json file.')
parser.add_argument('--file', type=str, default=None, required=True, help='The input json file. Pls see ./tests/data/test.json for example.')
parser.add_argument('--method', type=str, default='rivulet2', required=False, help='The method to use (rivulet2/rivulet1/app2) ')
parser.add_argument('--pbs', dest='pbs', action='store_true')
parser.add_argument('--no-pbs', dest='pbs', action='store_false')
parser.set_defaults(pbs=False)
args = parser.parse_args()
tracejsonfile(args.file, args.pbs, method=args.method)
